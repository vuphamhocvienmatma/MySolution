# Thuộc tính 'version' không còn cần thiết và đã được xóa
services:
  # === Application Services ===
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: Dockerfile
      target: api-gateway-final 
    command: ["dotnet", "ApiGateway.dll"]
    ports:
      - "7100:8080"
      - "7101:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    volumes:
      - ~/.aspnet/https:/https/:ro
    depends_on:
      - web-api

  web-api:
    container_name: web-api
    build:
      context: .
      dockerfile: Dockerfile
      target: web-api-final 
    command: ["dotnet", "WebAPI.dll"]
    ports: []      
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=your_dev_cert_password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sql-server;Database=MyCleanArchitectureDb;User Id=sa;Password=YourStrong!Password123;TrustServerCertificate=True;
      - ConnectionStrings__Redis=redis:6379
      - Jaeger__Host=jaeger
    volumes:
      - ~/.aspnet/https:/https/:ro
    depends_on:
      sql-server:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  # === Infrastructure Services ===
  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong!Password123
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql/bin/healthcheck"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    volumes:
      - sql-server-data:/var/opt/mssql

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  elasticsearch:
    image: elasticsearch:8.14.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

  # === Observability Stack ===
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

# Docker Volumes for data persistence
volumes:
  sql-server-data:
  redis-data:
  elasticsearch-data:
  rabbitmq-data:
  mongodb-data: